<application>
  <component name="ParameterNameHintsSettings">
    <blacklists>
      <blacklist language="TypeScript">
        <added pattern="Lab.experiment(desc,cb)" />
        <added pattern="Lab.test(desc,cb)" />
        <added pattern="Values.equal(value,options)" />
        <added pattern="createKoaServer(options)" />
        <added pattern="expect(value,prefix)" />
        <added pattern="log(args)" />
        <added pattern="insertMany(cls,values)" />
        <added pattern="_.LoDashStatic.range(start,end,step)" />
        <added pattern="before(callback)" />
        <added pattern="QueryRunner.insert(tableName,valuesMap)" />
        <added pattern="EntityManager.transaction(runInTransaction)" />
        <added pattern="String.split(separator,limit)" />
        <added pattern="Array.map(callbackfn,thisArg)" />
        <added pattern="moment.Moment.month(M)" />
        <added pattern="jest.Matchers.toEqual(expected)" />
        <added pattern="Array.filter(callbackfn,thisArg)" />
        <added pattern="SelectQueryBuilder.leftJoinAndSelect(property,aliasName,condition,parameters)" />
        <added pattern="QueryRunner.query(query,parameters)" />
        <added pattern="EmailTemplate.send(to,data)" />
        <added pattern="createClient(url,options,callback)" />
        <added pattern="JSON.stringify(value,replacer,space)" />
        <added pattern="Logger.child(options,simple)" />
        <added pattern="Logger.info(obj,params)" />
        <added pattern="Array.some(callbackfn,thisArg)" />
      </blacklist>
      <blacklist language="Ruby">
        <added pattern="RSpec::Expectations::ExpectationTarget::InstanceMethods.to(matcher,message,block)" />
        <added pattern="Mongoid::Fields::ClassMethods.field(name,options)" />
        <added pattern="Mongoid::Indexable::ClassMethods.index(spec,options)" />
        <added pattern="Mongoid::Scopable::ClassMethods.scope(name,value,block)" />
        <added pattern="Mongoid::Document.initialize(attrs)" />
        <added pattern="Mongoid::Persistable::Creatable::ClassMethods.create!(attributes,block)" />
        <added pattern="RSpec::Core::MemoizedHelpers::ClassMethods.let!(name,block)" />
        <added pattern="ActiveSupport::HashWithIndifferentAccess.initialize(constructor)" />
      </blacklist>
    </blacklists>
  </component>
</application>